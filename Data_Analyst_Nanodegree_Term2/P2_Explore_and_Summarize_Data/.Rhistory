ggplot(data = df,
aes(x = alcohol,
y = density,
color = quality)) +
geom_point(position = position_jitter(height = 0)) +
facet_wrap(~rating)
ggplot(data = df,
aes(x = free.sulfur.dioxide,
y = total.sulfur.dioxide,
color = quality)) +
geom_point(position = position_jitter(height = 0)) +
facet_wrap(~rating) +
scale_y_continuous(lim = c(0, quantile(df$total.sulfur.dioxide, 0.99)))
ggplot(data = df,
aes(x = free.sulfur.dioxide,
y = total.sulfur.dioxide,
color = quality)) +
geom_point() +
facet_wrap(~rating) +
scale_y_continuous(lim = c(0, quantile(df$total.sulfur.dioxide, 0.99)))
position = position_jitter(height = 0)
ggplot(data = df,
aes(x = free.sulfur.dioxide,
y = total.sulfur.dioxide,
color = quality)) +
geom_point(position = position_jitter(height = 0)) +
facet_wrap(~rating) +
scale_y_continuous(lim = c(0, quantile(df$total.sulfur.dioxide, 0.99)))
ggplot(data = df,
aes(x = alcohol,
y = density,
color = quality)) +
geom_point(position = position_jitter(height = 0)) +
facet_wrap(~rating)
ggplot(data = df,
aes(x = volatile.acidity,
y = citric.acid,
color = quality)) +
geom_point(position = position_jitter(height = 0)) +
facet_wrap(~rating) +
geom_smooth()
ggplot(data = df,
aes(x = volatile.acidity,
y = citric.acid,
color = quality)) +
geom_point(position = position_jitter(height = 0)) +
facet_wrap(~rating)
ggplot(data = df,
aes(x = overall.acidity,
y = pH)) +
geom_point(position = position_jitter(height = 0)) +
facet_wrap(~rating)
ggplot(data = df,
aes(x = overall.acidity,
y = pH,
color = quality)) +
geom_point(position = position_jitter(height = 0)) +
facet_wrap(~rating)
# Chunk 1
# Load all of the packages that you end up using in your analysis in this code
# chunk.
# Notice that the parameter "echo" was set to FALSE for this code chunk. This
# prevents the code from displaying in the knitted HTML output. You should set
# echo=FALSE for all code chunks in your file, unless it makes sense for your
# report to show the code that generated a particular plot.
# The other parameters for "message" and "warning" should also be set to FALSE
# for other code chunks once you have verified that each plot comes out as you
# want it to. This will clean up the flow of your report.
library(ggplot2)
library(dplyr)
library(tidyr)
library(GGally)
library(scales)
library(memisc)
library(reshape2)
library(gridExtra)
# Chunk 2
# Load the Data
df <- read.csv('wineQualityReds.csv')
# Chunk 3
# Check the general structure of the dataset
str(df)
# Double check to see if there are any dupicates
anyDuplicated(df)
# A glimpse on the statistical summaries on each variable
summary(df)
# Chunk 4
# Change X to a factor (Nominal) variable
df$X <- factor(df$X)
# Sanity check
str(df$X)
# Change quality to a factor & ordinal variable
df$quality <- factor(df$quality, ordered = T)
# Sanity check
str(df$quality)
# Chunk 5
# Melt the dataframe and map 'value' as the x variable
ggplot(data = melt(df),
aes(x = value)) +
geom_histogram(color = 'black',
fill = '#099DD9') +
facet_wrap(~variable, scales = 'free')
# Histogram on quality
qplot(x = df$quality,
color = I('black'),
fill = I('#099DD9'),
xlab = 'Quality')
# Chunk 6
# Instantiate categorical variable 'rating'
df$rating <- ifelse(df$quality < 5, 'bad',
ifelse(df$quality < 7, 'average', 'good'))
df$rating <- ordered(df$rating,
levels = c('bad', 'average', 'good'))
# Sanity check
table(df$rating)
# Chunk 7
# Plot the rating
qplot(x = df$rating,
color = I('black'),
fill = I('#099DD9'),
xlab = 'Rating')
# Chunk 8
# Overall acidity variable
df$overall.acidity <- df$fixed.acidity + df$volatile.acidity + df$citric.acid
# Plot overall acidity
ggplot(aes(x = overall.acidity),
data = df) +
geom_histogram(color = 'black',
fill = '#099DD9')
# Chunk 9
# Comparison on overall acidity
ggplot(data = subset(df, rating != 'average'),
aes(x = overall.acidity,
fill = rating)) +
geom_density(alpha = 0.6)
# Chunk 10
# Comparison on low level along with other variables
ggplot(data = melt(subset(df, rating != 'average')),
aes(x = value, fill = rating)) +
geom_density(alpha = 0.6) +
facet_wrap(~variable, scales = 'free')
# Chunk 11
# Boxplot to spot outliers
ggplot(data = melt(df),
aes(x = 'Wine', y = value)) +
geom_boxplot(color = 'black',
fill = '#099DD9') +
facet_wrap(~variable, scales = 'free')
# Chunk 12
# Boxplot on rating
ggplot(data = melt(df),
aes(x = 'Wine',
y = value,
fill = rating)) +
geom_boxplot() +
xlab('Rating') +
facet_wrap(~variable, scales = 'free')
# Boxplot on quality
ggplot(data = melt(df),
aes(x = 'Wine',
y = value,
fill = quality)) +
geom_boxplot() +
xlab('Quality') +
facet_wrap(~variable, scales = 'free')
# Chunk 13
# Create a boolean filter for numeric columns
df_num_columns <- sapply(df, is.numeric)
# Correlation of variables (Numeric) against quality
cor(df[ , df_num_columns], as.numeric(df$quality))
# Chunk 14
# Scatter plot on volatile.acidity against citric.acid
ggplot(data = df,
aes(x = volatile.acidity,
y = citric.acid)) +
geom_point(color = '#099DD9',
position = position_jitter(height = 0)) +
geom_smooth(method = 'lm', color = 'red')
# Correlation coefficient
with(df, cor.test(df$volatile.acidity, df$citric.acid))
# Scatter plot on volatile.acidity against fixed.acidity
ggplot(data = df,
aes(x = volatile.acidity,
y = fixed.acidity)) +
geom_point(color = '#099DD9',
position = position_jitter(height = 0)) +
geom_smooth(method = 'lm', color = 'red')
# Correlation coefficient
with(df, cor.test(df$volatile.acidity, df$fixed.acidity))
# Chunk 15
# Scatter plot on `total.sulfur.dioxide` against `free.sulfur.dioxide`
ggplot(data = df,
aes(x = free.sulfur.dioxide,
y = total.sulfur.dioxide)) +
geom_point(color = '#099DD9',
position = position_jitter(height = 0)) +
geom_smooth(method = 'lm', color = 'red')
# Correlation coefficient
with(df, cor.test(df$free.sulfur.dioxide, df$total.sulfur.dioxide))
# Chunk 16
# Scatter plot on `residual.sugar` against `density`
ggplot(data = df,
aes(x = residual.sugar,
y = density)) +
geom_point(color = '#099DD9',
position = position_jitter(height = 0)) +
geom_smooth(method = 'lm', color = 'red')
# Correlation coefficient
with(df, cor.test(df$residual.sugar, df$density))
# Scatter plot on `alcohol` against `density`
ggplot(data = df,
aes(x = alcohol,
y = density)) +
geom_point(color = '#099DD9',
position = position_jitter(height = 0)) +
geom_smooth(method = 'lm', color = 'red')
# Correlation coefficient
with(df, cor.test(df$alcohol, df$density))
# Chunk 17
# Scatter plot on `overall.acidity` against `pH`
ggplot(data = df,
aes(x = overall.acidity,
y = pH)) +
geom_point(color = '#099DD9',
position = position_jitter(height = 0)) +
geom_smooth(method = 'lm', color = 'red')
# Correlation coefficient
with(df, cor.test(df$overall.acidity, df$pH))
# Chunk 18
# Build and fit the linear model for `pH` and `overall.acidity`
model <- lm(I(pH) ~ I(overall.acidity), data = df)
# Prediction
df$pH.estimate <- predict(model, df)
# Measure the difference between true values and estimates
df$pH.residual <- (df$pH.estimate - df$pH) / df$pH
# Boxplot on residuals
ggplot(data = df,
aes(x = quality,
y = pH.residual,
fill = quality)) +
geom_boxplot()
# Chunk 19
ggplot(data = df,
aes(x = volatile.acidity,
y = citric.acid,
color = quality)) +
geom_point(position = position_jitter(height = 0)) +
facet_wrap(~rating)
ggplot(data = df,
aes(x = free.sulfur.dioxide,
y = total.sulfur.dioxide,
color = quality)) +
geom_point(position = position_jitter(height = 0)) +
facet_wrap(~rating) +
scale_y_continuous(lim = c(0, quantile(df$total.sulfur.dioxide, 0.99)))
ggplot(data = df,
aes(x = alcohol,
y = density,
color = quality)) +
geom_point(position = position_jitter(height = 0)) +
facet_wrap(~rating)
ggplot(data = df,
aes(x = overall.acidity,
y = pH,
color = quality)) +
geom_point(position = position_jitter(height = 0)) +
facet_wrap(~rating)
ggplot(data = subset(df, rating != 'average'),
aes(x = citric.acid,
y = alcohol,
fill = rating)) +
geom_point(position = position_jitter())
ggplot(data = subset(df, rating != 'average'),
aes(x = citric.acid,
y = alcohol,
color = rating)) +
geom_point(position = position_jitter())
ggplot(data = subset(df, rating != 'average'),
aes(x = volatile.acidity,
y = alcohol,
color = rating)) +
geom_point(position = position_jitter())
ggplot(data = subset(df, rating != 'average'),
aes(x = volatile.acidity,
y = alcohol,
color = rating)) +
geom_point(position = position_jitter())
ggplot(data = subset(df, rating != 'average'),
aes(x = sulphates,
y = alcohol,
color = rating)) +
geom_point(position = position_jitter())
ggplot(data = subset(df, rating != 'average'),
aes(x = volatile.acidity,
y = alcohol,
color = rating)) +
geom_point(position = position_jitter())
ggplot(data = subset(df, rating != 'average'),
aes(x = citric.acid,
y = alcohol,
color = rating)) +
geom_point(position = position_jitter())
p1a <- ggplot(aes(x = citric.acid,
fill = rating),
data = subset(df, rating != average)) +
geom_density(alpha = 0.6)
p1a <- ggplot(aes(x = citric.acid,
fill = rating),
data = subset(df, rating != 'average')) +
geom_density(alpha = 0.6)
p1a <- ggplot(aes(x = citric.acid,
fill = rating),
data = subset(df, rating != 'average')) +
geom_density(alpha = 0.6)
grid.arrange(p1a, p1b, ncol = 2)
p1b <- ggplot(aes(x = alcohol,
fill = rating),
data = subset(df, rating != 'average')) +
geom_density(alpha = 0.6)
grid.arrange(p1a, p1b, ncol = 2)
p2a <- ggplot(aes(x = volatile.acidity,
fill = quality),
data = df) +
geom_boxplot()
p2b <- ggplot(aes(x = sulphates,
fill = quality),
data = df) +
geom_boxplot()
grid.arrange(p2a, p2b, ncol = 2)
p2a <- ggplot(aes(x = 'Wine Quality',
y = volatile.acidity,
fill = quality),
data = df) +
geom_boxplot()
p2b <- ggplot(aes(x = 'Wine Quality',
y = sulphates,
fill = quality),
data = df) +
geom_boxplot()
grid.arrange(p2a, p2b, ncol = 2)
p2a <- ggplot(aes(x = 'Wine Quality',
y = volatile.acidity,
fill = quality),
data = df) +
geom_boxplot() +
scale_y_continuous(lim = c(0, quantile(df$volatile.acidity, 0.99)))
p2b <- ggplot(aes(x = 'Wine Quality',
y = sulphates,
fill = quality),
data = df) +
geom_boxplot() +
scale_y_continuous(lim = c(0, quantile(df$sulphates, 0.99)))
grid.arrange(p2a, p2b, ncol = 2)
p2b <- ggplot(aes(x = 'Wine Quality',
y = sulphates,
fill = quality),
data = df) +
geom_boxplot() +
scale_y_continuous(lim = c(0, quantile(df$sulphates, 0.95)))
grid.arrange(p2a, p2b, ncol = 2)
p2a <- ggplot(aes(x = quality,
y = volatile.acidity,
fill = quality),
data = df) +
geom_boxplot() +
scale_y_continuous(lim = c(0, quantile(df$volatile.acidity, 0.99))) +
xlab('Wine Quality')
p2b <- ggplot(aes(x = quality,
y = sulphates,
fill = quality),
data = df) +
geom_boxplot() +
scale_y_continuous(lim = c(0, quantile(df$sulphates, 0.95))) +
xlab('Wine Quality')
grid.arrange(p2a, p2b, ncol = 2)
grid.arrange(p1a, p1b, ncol = 2)
p1a <- ggplot(aes(x = citric.acid,
fill = rating),
data = subset(df, rating != 'average')) +
geom_density(alpha = 0.6) +
xlab('Citric Acid (g / dm^3)')
p1b <- ggplot(aes(x = alcohol,
fill = rating),
data = subset(df, rating != 'average')) +
geom_density(alpha = 0.6) +
xlab('Citric Acid (g / dm^3)')
grid.arrange(p1a, p1b, ncol = 2)
p1b <- ggplot(aes(x = alcohol,
fill = rating),
data = subset(df, rating != 'average')) +
geom_density(alpha = 0.6) +
xlab('Alcohol (% by volume)')
grid.arrange(p1a, p1b, ncol = 2)
p3a <- ggplot(data = subset(df, rating != 'average'),
aes(x = citric.acid,
y = alcohol,
color = rating)) +
geom_point(position = position_jitter())
p3b <- ggplot(data = subset(df, rating != 'average'),
aes(x = volatile.acidity,
y = alcohol,
color = rating)) +
geom_point(position = position_jitter())
p3a <- ggplot(data = subset(df, rating != 'average'),
aes(x = citric.acid,
y = alcohol,
color = rating)) +
geom_point(position = position_jitter()) +
xlab('Citric acid (g / dm^3)') +
ylab('Alcohol (% by volume)')
p3b <- ggplot(data = subset(df, rating != 'average'),
aes(x = volatile.acidity,
y = alcohol,
color = rating)) +
geom_point(position = position_jitter()) +
xlab('Volatile acidity (acetic acid - g / dm^3)') +
ylab('Alcohol (% by volume)')
grid.arrange(p3a, p3b, ncol = 2)
grid.arrange(p3a, p3b, ncol = 1)
grid.arrange(p2a, p2b, ncol = 1)
grid.arrange(p1a, p1b, ncol = 1)
grid.arrange(p2a, p2b, ncol = 1)
p2a <- ggplot(aes(x = quality,
y = volatile.acidity,
fill = quality),
data = df) +
geom_boxplot() +
scale_y_continuous(lim = c(0, quantile(df$volatile.acidity, 0.99))) +
xlab('Wine Quality') +
ylab('Volatile acidity (acetic acid - g / dm^3)')
p2b <- ggplot(aes(x = quality,
y = sulphates,
fill = quality),
data = df) +
geom_boxplot() +
scale_y_continuous(lim = c(0, quantile(df$sulphates, 0.95))) +
xlab('Wine Quality') +
ylab('Potassium Sulphate - g / dm3')
grid.arrange(p2a, p2b, ncol = 1)
p1a <- ggplot(aes(x = citric.acid,
fill = rating),
data = subset(df, rating != 'average')) +
geom_density(alpha = 0.6) +
xlab('Citric Acid (g / dm^3)') +
ylab('Probability Density Function')
p1b <- ggplot(aes(x = alcohol,
fill = rating),
data = subset(df, rating != 'average')) +
geom_density(alpha = 0.6) +
xlab('Alcohol (% by volume)') +
ylab('Probability Density Function')
p1a <- ggplot(aes(x = citric.acid,
fill = rating),
data = subset(df, rating != 'average')) +
geom_density(alpha = 0.6) +
xlab('Citric Acid (g / dm^3)') +
ylab('Probability Density Function') +
ggtitle('Probability Density Function of Citric Acid Level')
p1b <- ggplot(aes(x = alcohol,
fill = rating),
data = subset(df, rating != 'average')) +
geom_density(alpha = 0.6) +
xlab('Alcohol (% by volume)') +
ylab('Probability Density Function') +
ggtitle('Probability Density Function of Alcohol Level')
grid.arrange(p1a, p1b, ncol = 1)
p2a <- ggplot(aes(x = quality,
y = volatile.acidity,
fill = quality),
data = df) +
geom_boxplot() +
scale_y_continuous(lim = c(0, quantile(df$volatile.acidity, 0.99))) +
xlab('Wine Quality') +
ylab('Volatile acidity (acetic acid - g / dm^3)') +
ggtitle('Volatility Acidity Level among Different Wine Qualities')
p2b <- ggplot(aes(x = quality,
y = sulphates,
fill = quality),
data = df) +
geom_boxplot() +
scale_y_continuous(lim = c(0, quantile(df$sulphates, 0.95))) +
xlab('Wine Quality') +
ylab('Potassium Sulphate - g / dm3') +
ggtitle('Sulphates Level among Different Wine Qualities')
grid.arrange(p2a, p2b, ncol = 1)
p2b <- ggplot(aes(x = quality,
y = sulphates,
fill = quality),
data = df) +
geom_boxplot() +
scale_y_continuous(lim = c(0, quantile(df$sulphates, 0.95))) +
xlab('Wine Quality') +
ylab('Sulphates (Potassium Sulphate - g / dm3)') +
ggtitle('Sulphates Level among Different Wine Qualities')
grid.arrange(p2a, p2b, ncol = 1)
p3a <- ggplot(data = subset(df, rating != 'average'),
aes(x = citric.acid,
y = alcohol,
color = rating)) +
geom_point(position = position_jitter()) +
xlab('Citric acid (g / dm^3)') +
ylab('Alcohol (% by volume)') +
ggtitle('Citric Acid & Alcohol on Wine Ratings')
p3b <- ggplot(data = subset(df, rating != 'average'),
aes(x = volatile.acidity,
y = alcohol,
color = rating)) +
geom_point(position = position_jitter()) +
xlab('Volatile acidity (acetic acid - g / dm^3)') +
ylab('Alcohol (% by volume)') +
ggtitle('Volatility Acidity & Alcohol on Wine Ratings')
grid.arrange(p3a, p3b, ncol = 1)
