# Load all of the packages
library(ggplot2)
library(dplyr)
library(tidyr)
library(GGally)
library(scales)
library(memisc)
library(reshape2)
library(gridExtra)
# Load the Data
df <- read.csv('wineQualityReds.csv')
getwd()
setwd('~/Udacity_Data_Science')
getwd()
setwd('Data_Analyst_Nanodegree_Term2/P2_Explore_and_Summarize_Data')
# Load the Data
df <- read.csv('wineQualityReds.csv')
# Check the general structure of the dataset
str(df)
# Double check to see if there are any dupicates
anyDuplicated(df)
# A glimpse on the statistical summaries on each variable
summary(df)
# Change X to a factor (Nominal) variable
df$X <- factor(df$X)
# Sanity check
str(df$X)
# Change quality to a factor & ordinal variable
df$quality <- factor(df$quality, ordered = T)
# Sanity check
str(df$quality)
# Melt the dataframe and map 'value' as the x variable
ggplot(data = melt(df),
aes(x = value)) +
geom_histogram(color = 'black',
fill = '#099DD9') +
facet_wrap(~variable, scales = 'free')
# Histogram on quality
qplot(x = df$quality,
color = I('black'),
fill = I('#099DD9'),
xlab = 'Quality')
# Sanity check
table(df$rating)
# Instantiate categorical variable 'rating'
df$rating <- ifelse(df$quality < 5, 'bad',
ifelse(df$quality < 7, 'average', 'good'))
df$rating <- ordered(df$rating,
levels = c('bad', 'average', 'good'))
# Sanity check
table(df$rating)
levels(df$rating)
# Boxplot on rating
ggplot(data = melt(df),
aes(x = rating,
y = value)) +
geom_jitter(alpha = 0.3) +
geom_boxplot(alpha = 0.5, color = 'blue') +
stat_summary(fun.y = "mean",
geom = "point",
color = "red",
shape = 8,
size = 4) +
xlab('Rating') +
facet_wrap(~variable, scales = 'free')
```{r echo=FALSE, message=FALSE, fig.width=6, fig.height=2.5}
# Boxplot on rating
ggplot(data = melt(df),
aes(x = rating,
y = value)) +
geom_jitter(alpha = 0.3) +
geom_boxplot(alpha = 0.5, color = 'blue') +
stat_summary(fun.y = "mean",
geom = "point",
color = "red",
shape = 8,
size = 4) +
xlab('Rating') +
facet_wrap(~variable, scales = 'free')
# Boxplot on quality
ggplot(data = melt(df),
aes(x = quality,
y = value)) +
geom_jitter(alpha = 0.3) +
geom_boxplot(alpha = 0.5, color = 'blue') +
stat_summary(fun.y = "mean",
geom = "point",
color = "red",
shape = 8,
size = 4) +
geom_boxplot() +
xlab('Quality') +
facet_wrap(~variable, scales = 'free')
ggplot(data = melt(df),
aes(x = quality,
y = value)) +
geom_jitter(alpha = 0.3) +
geom_boxplot(alpha = 0.5, color = 'blue') +
stat_summary(fun.y = "mean",
geom = "point",
color = "red",
shape = 8,
size = 4) +
geom_boxplot() +
xlab('Quality') +
facet_wrap(~variable, scales = 'free')
# Boxplot on quality
ggplot(data = melt(df),
aes(x = quality,
y = value)) +
geom_jitter(alpha = 0.3) +
geom_boxplot(alpha = 0.5, color = 'blue') +
stat_summary(fun.y = "mean",
geom = "point",
color = "red",
shape = 8,
size = 4) +
xlab('Quality') +
facet_wrap(~variable, scales = 'free')
# Boxplot on quality
ggplot(data = melt(df),
aes(x = quality,
y = value)) +
geom_jitter(alpha = 0.1) +
geom_boxplot(alpha = 0.5, color = 'blue') +
stat_summary(fun.y = "mean",
geom = "point",
color = "red",
shape = 8,
size = 4) +
xlab('Quality') +
facet_wrap(~variable, scales = 'free')
# Boxplot on quality
ggplot(data = melt(df),
aes(x = quality,
y = value)) +
geom_jitter(alpha = 0.2) +
geom_boxplot(alpha = 0.5, color = 'blue') +
stat_summary(fun.y = "mean",
geom = "point",
color = "red",
shape = 8,
size = 4) +
xlab('Quality') +
facet_wrap(~variable, scales = 'free')
# Boxplot on rating
ggplot(data = melt(df),
aes(x = rating,
y = value)) +
geom_jitter(alpha = 0.2) +
geom_boxplot(alpha = 0.4, color = 'blue') +
stat_summary(fun.y = "mean",
geom = "point",
color = "red",
shape = 8,
size = 4) +
xlab('Rating') +
facet_wrap(~variable, scales = 'free')
# Boxplot on quality
ggplot(data = melt(df),
aes(x = quality,
y = value)) +
geom_jitter(alpha = 0.2) +
geom_boxplot(alpha = 0.4, color = 'blue') +
stat_summary(fun.y = "mean",
geom = "point",
color = "red",
shape = 8,
size = 4) +
xlab('Quality') +
facet_wrap(~variable, scales = 'free')
# Scatter plot on volatile.acidity against citric.acid
ggplot(data = df,
aes(x = volatile.acidity,
y = citric.acid)) +
geom_point(alpha = 0.3,
color = '#099DD9',
position = position_jitter(height = 0)) +
geom_smooth(method = 'lm', color = 'red')
# Scatter plot on volatile.acidity against citric.acid
ggplot(data = df,
aes(x = volatile.acidity,
y = citric.acid)) +
geom_point(alpha = 0.5,
color = '#099DD9',
position = position_jitter(height = 0)) +
geom_smooth(method = 'lm', color = 'red')
# Scatter plot on volatile.acidity against citric.acid
ggplot(data = df,
aes(x = volatile.acidity,
y = citric.acid)) +
geom_point(alpha = 0.3,
size = 1,
color = '#099DD9',
position = position_jitter(height = 0)) +
geom_smooth(method = 'lm', color = 'red')
# Scatter plot on volatile.acidity against citric.acid
ggplot(data = df,
aes(x = volatile.acidity,
y = citric.acid)) +
geom_point(alpha = 0.3,
size = 1,
color = '#099DD9',
position = position_jitter(height = 0)) +
geom_smooth(method = 'lm',
color = 'red',
size = 1,
se = FALSE)
# Scatter plot on volatile.acidity against fixed.acidity
ggplot(data = df,
aes(x = volatile.acidity,
y = fixed.acidity)) +
geom_point(alpha = 0.3,
size = 1,
color = '#099DD9',
position = position_jitter(height = 0)) +
geom_smooth(method = 'lm',
color = 'red',
size = 1,
se = FALSE)
# Create a boolean filter for numeric columns
df_num_columns <- sapply(df, is.numeric)
# Correlation of variables (Numeric) against quality
cor(df[ , df_num_columns], as.numeric(df$quality))
# Overall acidity variable
df$overall.acidity <- df$fixed.acidity + df$volatile.acidity + df$citric.acid
# Plot overall acidity
ggplot(aes(x = overall.acidity),
data = df) +
geom_histogram(color = 'black',
fill = '#099DD9')
# Instantiate categorical variable 'rating'
df$rating <- ifelse(df$quality < 5, 'bad',
ifelse(df$quality < 7, 'average', 'good'))
df$rating <- ordered(df$rating,
levels = c('bad', 'average', 'good'))
# Sanity check
table(df$rating)
# Create a boolean filter for numeric columns
df_num_columns <- sapply(df, is.numeric)
# Correlation of variables (Numeric) against quality
cor(df[ , df_num_columns], as.numeric(df$quality))
ggcorr(df)
ggcorr(as.numeric(df))
# Correlation table among variables
ggcorr(df)
# Scatter plot on `total.sulfur.dioxide` against `free.sulfur.dioxide`
ggplot(data = df,
aes(x = free.sulfur.dioxide,
y = total.sulfur.dioxide)) +
geom_point(alpha = 0.3,
size = 1,
color = '#099DD9',
position = position_jitter(height = 0)) +
geom_smooth(method = 'lm',
color = 'red',
size = 1,
se = FALSE)
# Scatter plot on `residual.sugar` against `density`
ggplot(data = df,
aes(x = residual.sugar,
y = density)) +
geom_point(alpha = 0.3,
size = 1,
color = '#099DD9',
position = position_jitter(height = 0)) +
geom_smooth(method = 'lm',
color = 'red',
size = 1,
se = FALSE)
# Scatter plot on `alcohol` against `density`
ggplot(data = df,
aes(x = alcohol,
y = density)) +
geom_point(alpha = 0.3,
size = 1,
color = '#099DD9',
position = position_jitter(height = 0)) +
geom_smooth(method = 'lm',
color = 'red',
size = 1,
se = FALSE)
# Scatter plot on `overall.acidity` against `pH`
ggplot(data = df,
aes(x = overall.acidity,
y = pH)) +
geom_point(alpha = 0.3,
size = 1,
color = '#099DD9',
position = position_jitter(height = 0)) +
geom_smooth(method = 'lm',
color = 'red',
size = 1,
se = FALSE)
# Boxplot on residuals
ggplot(data = df,
aes(x = quality,
y = pH.residual)) +
geom_jitter(alpha = 0.2) +
geom_boxplot(alpha = 0.4, color = 'blue') +
stat_summary(fun.y = "mean",
geom = "point",
color = "red",
shape = 8,
size = 4) +
xlab('Quality')
# Build and fit the linear model for `pH` and `overall.acidity`
model <- lm(I(pH) ~ I(overall.acidity), data = df)
# Prediction
df$pH.estimate <- predict(model, df)
# Measure the difference between true values and estimates
df$pH.residual <- (df$pH.estimate - df$pH) / df$pH
# Boxplot on residuals
ggplot(data = df,
aes(x = quality,
y = pH.residual)) +
geom_jitter(alpha = 0.2) +
geom_boxplot(alpha = 0.4, color = 'blue') +
stat_summary(fun.y = "mean",
geom = "point",
color = "red",
shape = 8,
size = 4) +
xlab('Quality')
# Boxplot on residuals
ggplot(data = df,
aes(x = quality,
y = pH.residual)) +
geom_jitter(alpha = 0.5) +
geom_boxplot(alpha = 0.5, color = 'blue') +
stat_summary(fun.y = "mean",
geom = "point",
color = "red",
shape = 8,
size = 4) +
xlab('Quality')
ggplot(data = df,
aes(x = alcohol,
y = density,
color = quality)) +
geom_point(alpha = 0.8,
size = 1,
position = position_jitter(height = 0)) +
geom_smooth(method = "lm",
size = 1,
se = FALSE)  +
scale_color_brewer(type = 'seq',
guide = guide_legend(title = 'Quality'))
ggplot(data = df,
aes(x = alcohol,
y = density,
color = quality)) +
geom_point(alpha = 0.8,
size = 1,
position = position_jitter(height = 0)) +
geom_smooth(method = "lm",
size = 1,
se = FALSE)  +
scale_color_brewer(type = 'seq',
guide = guide_legend(title = 'Quality')) +
facet_wrap(~rating)
ggplot(data = df,
aes(x = alcohol,
y = density,
color = quality)) +
geom_point(size = 1,
position = position_jitter(height = 0)) +
geom_smooth(method = "lm",
size = 1,
se = FALSE)  +
scale_color_brewer(type = 'seq',
guide = guide_legend(title = 'Quality')) +
facet_wrap(~rating)
ggplot(data = df,
aes(x = overall.acidity,
y = pH,
color = quality)) +
geom_point(alpha = 0.8,
size = 1,
position = position_jitter(height = 0)) +
geom_smooth(method = "lm",
size = 1,
se = FALSE)  +
scale_color_brewer(type = 'seq',
guide = guide_legend(title = 'Quality')) +
facet_wrap(~rating)
p2a <- ggplot(data = df,
aes(x = quality,
y = volatile.acidity)) +
geom_jitter(alpha = 0.2) +
geom_boxplot(alpha = 0.4, color = 'blue') +
stat_summary(fun.y = "mean",
geom = "point",
color = "red",
shape = 8,
size = 4) +
scale_y_continuous(lim = c(0, quantile(df$volatile.acidity, 0.99))) +
xlab('Wine Quality') +
ylab('Volatile acidity (acetic acid - g / dm^3)') +
ggtitle('Volatility Acidity Level among Different Wine Qualities')
p2a <- ggplot(data = df,
aes(x = quality,
y = volatile.acidity)) +
geom_jitter(alpha = 0.2) +
geom_boxplot(alpha = 0.4, color = 'blue') +
stat_summary(fun.y = "mean",
geom = "point",
color = "red",
shape = 8,
size = 4) +
scale_y_continuous(lim = c(0, quantile(df$volatile.acidity, 0.99))) +
xlab('Wine Quality') +
ylab('Volatile acidity (acetic acid - g / dm^3)') +
ggtitle('Volatility Acidity Level among Different Wine Qualities')
p2b <- ggplot(data = df,
aes(x = quality,
y = sulphates)) +
geom_jitter(alpha = 0.2) +
geom_boxplot(alpha = 0.4, color = 'blue') +
stat_summary(fun.y = "mean",
geom = "point",
color = "red",
shape = 8,
size = 4) +
scale_y_continuous(lim = c(0, quantile(df$sulphates, 0.95))) +
xlab('Wine Quality') +
ylab('Sulphates (Potassium Sulphate - g / dm3)') +
ggtitle('Sulphates Level among Different Wine Qualities')
grid.arrange(p2a, p2b, ncol = 1)
